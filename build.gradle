buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:1.2.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'org.kordamp.markdown.convert' version '1.2.0'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group 'fr.il_totore'
    version '1.0-SNAPSHOT'

    project.targetCompatibility = 1.8
    project.sourceCompatibility = 1.8

    compileJava {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }

    repositories {
        mavenCentral()
        mavenLocal()
    }

}

dependencies {

    compile project(nms('1_8_R3'))
    compile project(nms('1_9_R1'))
    compile project(nms('1_9_R2'))
    compile project(nms('1_10_R1'))
    compile project(nms('1_11_R1'))
    compile project(nms('1_12_R1'))
    compile project(nms('1_13_R1'))
    compile project(nms('1_13_R2'))
    compile project(nms('1_14_R1'))

    compile project(':EntityMetadataAPI:Abstract')
    compile project(':EntityMetadataAPI:Core')
}

static String nms(String version) {
    return ':EntityMetadataVersion:EntityMetadataV' + version
}

shadowJar {
    configurations = [project.configurations.compile]
}

def exportedProjects = [
        ':EntityMetadataAPI:Core',
        ':EntityMetadataAPI:Abstract'
]

task alljavadoc(type: Javadoc) {
    source exportedProjects.collect { name -> project(name).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { name -> project(name).sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/docs/javadoc")
    finalizedBy htmlToMarkdown
}

htmlToMarkdown {
    sourceDir = file("${buildDir}/docs/")
    outputDir = file("${buildDir}/markdownDocs/")
}